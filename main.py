from classes import Tags, SSPSO, birch_clustering, Readers, CFTree, CFNode
from functions import selection_mechanism, mainOptimization, TongHopBieuDo
import numpy as np
NUM_TAGS = 265
NUM_ITERATION = 100
DIM = 2
NUM_RFID_READERS = 50
if __name__ == "__main__":
    tag_positions = np.array([
    [22.54638082, 9.8100662],
    [32.53380401, 31.04790261],
    [26.02562863, 39.58537474],
    [49.42794055, 35.8750265],
    [7.52018443, 21.66834557],
    [8.76491851, 6.95629708],
    [24.03539547, 18.44289323],
    [39.6257227, 17.42345784],
    [15.5111089, 29.75548567],
    [23.82004914, 34.37319474],
    [29.18773679, 13.71156139],
    [33.87611926, 7.94182378],
    [31.81708137, 40.03855615],
    [40.52126477, 48.60390984],
    [29.89272055, 23.16411825],
    [23.13347644, 19.01732601],
    [9.67132287, 42.82247222],
    [34.33671656, 47.93030566],
    [32.71961212, 19.97521978],
    [0.05967777, 19.81317991],
    [22.55936045, 28.59251507],
    [23.87333795, 21.54891798],
    [24.50645054, 43.23684126],
    [9.87104009, 36.07539151],
    [5.40733951, 25.26131327],
    [12.67183526, 12.92569598],
    [46.65244038, 2.4111267],
    [21.49240211, 17.60897099],
    [7.24742914, 35.73417546],
    [28.77446998, 27.32638376],
    [43.44965198, 32.2698073],
    [0.05465406, 1.35457137],
    [34.41501754, 7.07558021],
    [0.64516384, 22.22879353],
    [34.02588023, 21.97639575],
    [45.88885613, 1.7669779],
    [13.17988493, 32.66708023],
    [8.14622485, 10.38378565],
    [21.35299309, 4.55126795],
    [48.27778374, 4.32003628],
    [17.81866867, 39.80544711],
    [45.82161541, 21.98656272],
    [31.6126069, 16.36168513],
    [36.31932353, 30.4957518],
    [2.17419241, 19.94658917],
    [33.59922934, 49.95131735],
    [47.29263197, 3.39862745],
    [19.10005469, 1.61866166],
    [44.11353184, 43.20013292],
    [29.62598841, 15.82922267],
    [23.12130833, 26.74000856],
    [38.07486274, 15.0168406],
    [18.10045953, 46.72932443],
    [4.97251811, 1.01577962],
    [49.38373382, 16.73947134],
    [32.28307687, 8.89538283],
    [6.77465576, 10.94064505],
    [29.09711492, 26.51739215],
    [24.18550574, 33.40861524],
    [49.55909234, 16.44769119],
    [2.30346191, 4.35762546],
    [34.73780168, 23.45849419],
    [15.00297428, 11.99467158],
    [26.56620256, 26.01459549],
    [6.53591805, 48.34232701],
    [32.31473334, 22.17436792],
    [20.97695407, 41.56231776],
    [14.48701345, 9.67858916],
    [31.37226556, 20.85464402],
    [8.22802338, 0.28302666],
    [36.15141887, 7.83497714],
    [9.82934485, 7.01917493],
    [0.21919844, 18.32953538],
    [40.08902647, 12.669206],
    [45.92295053, 47.3022857],
    [9.96798681, 4.67649799],
    [6.38494343, 2.91669585],
    [0.58798341, 0.7585496],
    [8.56072398, 24.4032537],
    [30.98504231, 40.34120711],
    [12.56789386, 47.66586661],
    [39.1418654, 4.3591591],
    [38.78117112, 31.11192404],
    [23.98702679, 26.63552587],
    [24.58213499, 14.50720797],
    [18.03673047, 30.43340384],
    [5.14050596, 38.10533223],
    [27.80691622, 21.55594741],
    [2.9146046, 19.94223004],
    [0.56500577, 33.53213957],
    [0.13889932, 28.09299175],
    [27.40818491, 45.08473498],
    [49.45271214, 13.12499986],
    [23.33213156, 23.12022271],
    [37.56406462, 34.73387679],
    [48.39365703, 17.9829188],
    [16.30885001, 35.61447536],
    [12.89777837, 21.50901639],
    [49.86828412, 0.59694838],
    [20.74099533, 48.97156066]
   ])
    # tags = []
    # for positions in tag_positions:
    #     tag = Tags(positions)
    #     tags.append(tag)
    GRID_SIZE = 0.8
    #readers = [Readers(np.random.rand(2) * [50, 30]) for _ in range(NUM_RFID_READERS)]
    tags = [Tags(np.random.rand(2) * [50, 50]) for _ in range(NUM_TAGS)]
    readers = selection_mechanism(tags, NUM_RFID_READERS, GRID_SIZE)
   
    #BieuDoReader(readers, tags, "Biểu đồ khởi tạo tâm cụm của các đầu đọc bằng K-means")
    sspso = SSPSO(NUM_RFID_READERS, DIM, NUM_ITERATION, readers)

    #readers = sspso.optimize(tags, 3.69)
    readers = mainOptimization(tags, readers, sspso, GRID_SIZE)

    
    #BieuDoReader(readers, tags, "")
    